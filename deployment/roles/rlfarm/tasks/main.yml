---
- name: install sudoers for rlfarm user
  template: src=templates/9999-ansible-rlfarm.j2 dest=/etc/sudoers.d/9999-ansible-rlfarm mode=0440 owner=root group=root

- name: create user
  user: name="{{ username }}" state=present

- name: remove existing venv
  file: path=~/env state=absent
  become: true
  become_user: "{{ username }}"

- name: create py35 virtual env
  shell: virtualenv -p python3.5 ~/env
  become: true
  become_user: "{{ username }}"

- name: install uwsgi
  shell: ~/env/bin/pip install uwsgi
  become: true
  become_user: "{{ username }}"

- name: install rlfarm from github
  shell: ~/env/bin/pip install https://github.com/wwitzel3/rlfarm/archive/master.zip
  become: true
  become_user: "{{ username }}"

- name: render production.ini
  template: src=templates/production.ini.j2 dest=~/production.ini
  become: true
  become_user: "{{ username }}"

- stat: path=~/.db_initialized
  register: db_initialized
  become: true
  become_user: "{{ username }}"

- name: initialize_db
  shell: ~/env/bin/initialize_rlfarm_db ~/production.ini
  become: true
  become_user: "{{ username }}"
  when: db_initialized.stat['exists'] == False

- name: .db_initialized
  file: path=~/.db_initialized state=touch
  when: db_initialized.stat['exists'] == False
  become: true
  become_user: "{{ username }}"

- name: install supervisord
  shell: pip install supervisor

- name: install supervisord conf
  template: src=templates/supervisord.conf.j2 dest=/home/{{ username }}/supervisord.conf
  become: true
  become_user: "{{ username }}"

- stat: path=/tmp/supervisord.pid
  register: spid

- name: restart supervisord
  shell: kill -HUP `cat /tmp/supervisord.pid`
  when: spid.stat.exists

- name: start supervisord
  shell: supervisord -c /home/{{ username }}/supervisord.conf
  when: not spid.stat.exists
